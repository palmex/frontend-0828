{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport \"./environment/react-native-logs.fx\";\nimport { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport DevAppContainer from \"./environment/DevAppContainer\";\nif (__DEV__) {\n  if (Platform.OS === 'web' && !('__fbBatchedBridgeConfig' in global)) {\n    Object.defineProperty(global, '__fbBatchedBridgeConfig', {\n      get: function get() {\n        throw new Error(\"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\");\n      }\n    });\n  }\n  AppRegistry.setWrapperComponentProvider(function () {\n    return DevAppContainer;\n  });\n  var originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n  AppRegistry.setWrapperComponentProvider = function (provider) {\n    function PatchedProviderComponent(props) {\n      var ProviderComponent = provider();\n      return React.createElement(DevAppContainer, null, React.createElement(ProviderComponent, _objectSpread({}, props)));\n    }\n    originalSetWrapperComponentProvider(function () {\n      return PatchedProviderComponent;\n    });\n  };\n}","map":{"version":3,"sources":["../src/Expo.fx.web.tsx"],"names":[],"mappings":";;;AAAA;AAEA,SAAS,QAAQ,QAAQ,mBAAmB;AAC5C,OAAO,KAAK,KAAK,MAAM,OAAO;AAAC,OAAA,WAAA;AAG/B,OAAO,eAAe;AAKtB,IAAI,OAAO,EAAE;EAEX,IAEE,QAAQ,CAAC,EAAE,KAAK,KAAK,IAErB,EAAE,yBAAyB,IAAI,MAAM,CAAC,EACtC;IACA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,yBAAyB,EAAE;MACvD,GAAG,WAAA,IAAA,EAAA;QACD,MAAM,IAAI,KAAK,CACb,qJAAqJ,CACtJ;MACH;KACD,CAAC;EACH;EAID,WAAW,CAAC,2BAA2B,CAAC;IAAA,OAAM,eAAe;EAAA,EAAC;EAG9D,IAAM,mCAAmC,GAAG,WAAW,CAAC,2BAA2B;EAGnF,WAAW,CAAC,2BAA2B,GAAG,UAAC,QAAQ,EAAI;IACrD,SAAS,wBAAwB,CAAC,KAAU,EAAA;MAC1C,IAAM,iBAAiB,GAAG,QAAQ,CAAA,CAAE;MAEpC,OACE,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA,IAAA,EACd,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,aAAA,KAAK,KAAK,CAAA,CAAI,CAChB;IAEtB;IAEA,mCAAmC,CAAC;MAAA,OAAM,wBAAwB;IAAA,EAAC;EACrE,CAAC;AACF","sourcesContent":["import './environment/react-native-logs.fx';\n\nimport { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { AppRegistry } from 'react-native';\n\nimport DevAppContainer from './environment/DevAppContainer';\n\n// When users dangerously import a file inside of react-native, it breaks the web alias.\n// This is one of the most common, and cryptic web errors that users encounter.\n// This conditional side-effect provides a more helpful error message for debugging.\nif (__DEV__) {\n  // Use a wrapper `__DEV__` to remove this entire block in production.\n  if (\n    // Only on web platforms.\n    Platform.OS === 'web' &&\n    // Skip mocking if someone is shimming this value out.\n    !('__fbBatchedBridgeConfig' in global)\n  ) {\n    Object.defineProperty(global, '__fbBatchedBridgeConfig', {\n      get() {\n        throw new Error(\n          \"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\"\n        );\n      },\n    });\n  }\n\n  // add the dev app container wrapper component to web\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider(() => DevAppContainer);\n\n  // @ts-ignore\n  const originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider = (provider) => {\n    function PatchedProviderComponent(props: any) {\n      const ProviderComponent = provider();\n\n      return (\n        <DevAppContainer>\n          <ProviderComponent {...props} />\n        </DevAppContainer>\n      );\n    }\n\n    originalSetWrapperComponentProvider(() => PatchedProviderComponent);\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}